Currently unused


paula.plonepas Package Readme
=============================

    >>> from paula.suite import createPaulaSuite
    >>> root = getRootFolder()
    >>> creatPaulaSuite(root, create_pau=True, create_credplugin=True)




A minimal plone user:

    >>> from paula.examples.content import MinimalPloneUser
    >>> user = MinimalPloneUser(
    ...     name=u"login",
    ...     password=u"correct",
    ...     email=u"foo@bar.com",
    ...     realname=u"Foo Bar",
    ...     )


Create our PlonePAS authentication plugin and try to authenticate

    >>> from paula.plonepas.plugins.auth import AuthenticationPlugin
    >>> pas_ap = AuthenticationPlugin('pas_ap')

wrong password

    >>> creds = {}
    >>> creds['login']="login"
    >>> creds['password']="wrong"
    >>> pas_ap.authenticateCredentials(creds) is None
    True

matching credentials

    >>> creds['password']="correct"
    >>> pas_ap.authenticateCredentials(creds)
    ('login', 'login')

non-existant username

    >>> creds['login']="wrong"
    >>> pas_ap.authenticateCredentials(creds) is None
    True







Create our PlonePAS properties plugin and try to fetch properties

    >>> from paula.plonepas.plugins.properties import PropertiesPlugin
    >>> pas_pp = PropertiesPlugin('pas_pp')

a mock plone user

    >>> ploneuser = Mock(getId = lambda : u"login")
    >>> psheet = pas_pp.getPropertiesForUser(ploneuser)
    >>> psheet.getId()
    'pas_pp'
    >>> psheet.propertyIds()
    ['email', 'realname']
    >>> psheet.propertyValues()
    [u'foo@bar.com', u'Foo Bar']
